"use strict";(self.webpackChunkdoc_forge=self.webpackChunkdoc_forge||[]).push([[6793],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return c}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),d=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(t),c=r,f=p["".concat(l,".").concat(c)]||p[c]||m[c]||i;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},810:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return m}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),o=["components"],s={sidebar_position:3,title:"Coremods",description:"Comment utiliser les coremods ?",tags:["avanc\xe9"]},l=void 0,d={unversionedId:"advanced/coremods",id:"advanced/coremods",title:"Coremods",description:"Comment utiliser les coremods ?",source:"@site/docs/advanced/coremods.md",sourceDirName:"advanced",slug:"/advanced/coremods",permalink:"/docs/advanced/coremods",draft:!1,editUrl:"https://github.com/Les-Moddeurs-Francais/Documentation-Forge/edit/master/docs/advanced/coremods.md",tags:[{label:"avanc\xe9",permalink:"/docs/tags/avance"}],version:"current",lastUpdatedBy:"Flow Arg",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Coremods",description:"Comment utiliser les coremods ?",tags:["avanc\xe9"]},sidebar:"tutorialSidebar",previous:{title:"Capabilities",permalink:"/docs/advanced/capabilities"},next:{title:"Dist Executor",permalink:"/docs/advanced/dist-executor"}},u={},m=[{value:"Introduction",id:"introduction",level:2},{value:"Fonctionnement",id:"fonctionnement",level:2},{value:"ClassTransformer",id:"classtransformer",level:3},{value:"MethodTransformer",id:"methodtransformer",level:3},{value:"FieldTransformer",id:"fieldtransformer",level:3},{value:"Exemples d&#39;utilisation",id:"exemples-dutilisation",level:2},{value:"Modification d&#39;une instruction",id:"modification-dune-instruction",level:3},{value:"\xc9tape 1",id:"\xe9tape-1",level:4},{value:"\xc9tape 2",id:"\xe9tape-2",level:4},{value:"\xc9tape 3",id:"\xe9tape-3",level:4},{value:"Affichage dans la console lors de l&#39;initialisation du jeu",id:"affichage-dans-la-console-lors-de-linitialisation-du-jeu",level:3},{value:"Supprimer des instructions",id:"supprimer-des-instructions",level:3},{value:"Transformation et mappings (lancement en production)",id:"transformation-et-mappings-lancement-en-production",level:2},{value:"Cible du transformer",id:"cible-du-transformer",level:3},{value:"Champ appel\xe9",id:"champ-appel\xe9",level:3},{value:"M\xe9thode appel\xe9e",id:"m\xe9thode-appel\xe9e",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:m};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Le syst\xe8me de ",(0,i.kt)("inlineCode",{parentName:"p"},"CoreMod")," est un outil fourni par ",(0,i.kt)("strong",{parentName:"p"},"Forge")," dans le projet ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/MinecraftForge/CoreMods"},"CoreMods"),". Il permet d'effectuer des modifications directement dans le code de Minecraft, sans passer ni par des \xe9v\xe9nements, ni par les autres outils fournis par l'API ",(0,i.kt)("strong",{parentName:"p"},"Forge"),". Ce syst\xe8me est apparu pour remplacer l'ancien syst\xe8me de coremods pr\xe9sent dans les versions de Forge ant\xe9rieures \xe0 la 1.13."),(0,i.kt)("admonition",{type:"warning"},(0,i.kt)("p",{parentName:"admonition"},"Attention, utilisez les coremods \xe0 vos risques et p\xe9rils, une sur-utilisation des coremods peut entra\xeener des incompatibilit\xe9s inter-mods !\nIls ne doivent \xeatre utilis\xe9s qu'en dernier recours. Il est possible d'ajouter autant de coremods que souhait\xe9, mais la modification du code n'est pas gratuite (surtout avec de grosses modifications) : le temps de chargement du jeu peut-\xeatre impact\xe9 s'il y en a beaucoup. Enfin, le d\xe9bug est plus difficile, puisque le code modifi\xe9 appara\xeet uniquement pendant l'ex\xe9cution, il n'existe pas physiquement."),(0,i.kt)("p",{parentName:"admonition"},"Il est fortement recommand\xe9 de se renseigner auparavant sur le bytecode Java. Les instructions et la biblioth\xe8que ASM qui est utilis\xe9e par le syst\xe8me de coremods.\nVoici quelques ressources :"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://asm.ow2.io"},"https://asm.ow2.io")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fr.wikipedia.org/wiki/ASM_(logiciel)"},"https://fr.wikipedia.org/wiki/ASM_(logiciel)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://fr.wikipedia.org/wiki/Bytecode_Java"},"https://fr.wikipedia.org/wiki/Bytecode_Java")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://gitlab.ow2.org/asm/asm"},"https://gitlab.ow2.org/asm/asm")))),(0,i.kt)("h2",{id:"fonctionnement"},"Fonctionnement"),(0,i.kt)("p",null,"Un coremod est repr\xe9sent\xe9 sous la forme d'un fichier JavaScript. En effet, le nouveau syst\xe8me de coremod utilise le moteur (d\xe9pr\xe9ci\xe9) ",(0,i.kt)("a",{parentName:"p",href:"https://openjdk.org/projects/nashorn/"},"Nashorn")," pour lire et ex\xe9cuter le coremod sous la forme d'un script JavaScript. L'objectif \xe9tant de restreindre le champ d'action du coremod pour des questions de s\xe9curit\xe9 et de stabilit\xe9. Pour cause, on ne peut pas appeler certaines classes \xe0 l'int\xe9rieur d'un coremod : seules les classes situ\xe9es dans les packages ",(0,i.kt)("inlineCode",{parentName:"p"},"java.util"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"java.util.function"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"org.objectweb.asm.tree"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"org.objectweb.asm"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"org.objectweb.asm.util")," et la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI")," (",(0,i.kt)("inlineCode",{parentName:"p"},"net.minecraftforge.coremod.api.ASMAPI"),") peuvent \xeatre utilis\xe9es."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"La classe ASMAPI poss\xe8de plein de m\xe9thodes utiles pour simplifier la transformation et \xe9viter d'\xe9crire du code redondant.\nLes classes de la biblioth\xe8que ASM, utilis\xe9es pour la transformation, sont tr\xe8s bien document\xe9es. Ne surtout pas h\xe9siter \xe0 se renseigner directement dans le code.")),(0,i.kt)("p",null,"Au chargement du mod, ",(0,i.kt)("strong",{parentName:"p"},"FML")," cherche le fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"coremods.json")," situ\xe9 dans le dossier ",(0,i.kt)("inlineCode",{parentName:"p"},"META-INF")," de votre mod. Par d\xe9faut, il n'existe pas, il faudra le cr\xe9er soi-m\xeame."),(0,i.kt)("p",null,"Exemple d'un fichier ",(0,i.kt)("inlineCode",{parentName:"p"},"coremods.json")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "edit_ai": "coremods/edit_ai.js",\n    "redstone_optimization": "coremods/redstone.js"\n}\n')),(0,i.kt)("p",null,"Sa structure est tr\xe8s simple : il s'agit simplement d'un objet avec plusieurs cl\xe9s ayant pour valeur des cha\xeenes de caract\xe8res. Ces derniers repr\xe9sentent le chemin d'acc\xe8s vers le fichier du coremod."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Le chemin d'acc\xe8s d\xe9marre \xe0 la racine du mod, et non du dossier ",(0,i.kt)("inlineCode",{parentName:"p"},"META-INF")," !\nExemple :"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-sh",metastring:"title='Arborescence basique pour les coremods'",title:"'Arborescence",basique:!0,pour:!0,les:!0,"coremods'":!0},"coremods\n    \u251c\u2500\u2500 edit_ai.js\n    \u2514\u2500\u2500 redstone.js\nMETA-INF\n    \u2514\u2500\u2500 coremods.json\n"))),(0,i.kt)("p",null,"Ensuite, ",(0,i.kt)("strong",{parentName:"p"},"FML")," va charger un \xe0 un les coremods. Si des erreurs de syntaxe sont d\xe9tect\xe9es, le coremod sera ignor\xe9 et une erreur sera imprim\xe9e dans les logs.\n\xc0 ce sujet, ",(0,i.kt)("inlineCode",{parentName:"p"},"Nashorn")," ne supporte pas les derni\xe8res fonctionnalit\xe9s des versions d'",(0,i.kt)("inlineCode",{parentName:"p"},"ECMAScript"),". Voici les r\xe8gles \xe0 respecter et quelques conseils :"),(0,i.kt)("p",null,"Utiliser le mot cl\xe9 ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," pour d\xe9clarer une variable. :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'var myVar = "x"; // bon\nlet myVar = "x"; // mauvais\nconst myVar = "x"; // mauvais\nString myVar = "x"; // mauvais\n')),(0,i.kt)("p",null,"Importer une classe :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var InsnList = Java.type('org.objectweb.asm.tree.InsnList');\n")),(0,i.kt)("p",null,"Affichage dans la console :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var ASMAPI = Java.type('net.minecraftforge.coremod.api.ASMAPI'); // importer ASMAPI\nASMAPI.log('DEBUG', \"Le message est : {} de : {}\", unParametre, unAutreParametre);\n")),(0,i.kt)("p",null,"Une boucle for :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"for(var i = 0; i < methodNode.instructions.toArray().length; i++) {\n    var insnNode = methodNode.instructions.toArray()[i];\n}\n")),(0,i.kt)("p",null,"Comparer deux strings :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'if(methodNode.name == "<init>") {\n\n}\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"<init>")," correspond au constructeur d'une classe. (Appel\xe9 lors de la cr\xe9ation d'un objet)."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"<clinit>")," correspond \xe0 l'initialiseur classique d'une classe. (Appel\xe9 lors du chargement de la classe).")),(0,i.kt)("p",null,"Chaque coremod poss\xe8de une fonction ",(0,i.kt)("inlineCode",{parentName:"p"},"initializeCoreMod")," qui est appel\xe9e au chargement du coremod. \xc0 l'int\xe9rieur doit \xeatre retourn\xe9 un ou plusieurs ",(0,i.kt)("inlineCode",{parentName:"p"},"Transfomer"),"s.\nUn transformer est l'objet d\xe9finissant quelle classe, m\xe9thode ou champ va \xeatre modifi\xe9, et les modifications \xe0 effectuer.\nPour cela, il d\xe9finit deux \xe9l\xe9ments : la cible ",(0,i.kt)("inlineCode",{parentName:"p"},"target")," et la fonction de transformation ",(0,i.kt)("inlineCode",{parentName:"p"},"transformer"),".\nIl y a trois types diff\xe9rents de transformers :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#classtransformer"},(0,i.kt)("inlineCode",{parentName:"a"},"ClassTransformer"))," : pour modifier une classe"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#methodtransformer"},(0,i.kt)("inlineCode",{parentName:"a"},"MethodTransformer"))," : pour modifier une m\xe9thode dans une classe"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#fieldtransformer"},(0,i.kt)("inlineCode",{parentName:"a"},"FieldTransformer"))," : pour modifier un champ dans une classe")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Pour rappel, il n'y a pas de notion de type. Dans les prochains extraits de code, les variables s'appellent ",(0,i.kt)("inlineCode",{parentName:"p"},"classNode"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"methodNode"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"fieldNode")," par soucis de lisibilit\xe9. Elle pourrait tr\xe8s bien se nommer ",(0,i.kt)("inlineCode",{parentName:"p"},"cn"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"mn"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"fn")," ou m\xeame ",(0,i.kt)("inlineCode",{parentName:"p"},"foo"),".")),(0,i.kt)("h3",{id:"classtransformer"},"ClassTransformer"),(0,i.kt)("p",null,"Param\xe8tres de la cible pour cr\xe9\xe9r un ",(0,i.kt)("inlineCode",{parentName:"p"},"ClassTransformer")," :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Nom"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Exemple"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"type"),(0,i.kt)("td",{parentName:"tr",align:null},"Le transformer transformera une classe"),(0,i.kt)("td",{parentName:"tr",align:null},"CLASS")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"name"),(0,i.kt)("td",{parentName:"tr",align:null},"Le nom de la classe"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"net/minecraft/client/Minecraft"))))),(0,i.kt)("p",null,"La fonction de transformation prend un objet ",(0,i.kt)("inlineCode",{parentName:"p"},"ClassNode")," en param\xe8tre et le retourne \xe0 la fin apr\xe8s avoir effectu\xe9 les modifications."),(0,i.kt)("p",null,"R\xe9sultat en ",(0,i.kt)("strong",{parentName:"p"},"JavaScript")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'CLASS',\n                'name': 'net/minecraft/client/Minecraft'\n            },\n            'transformer': function(classNode) {\n                // modifications\n                return classNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("h3",{id:"methodtransformer"},"MethodTransformer"),(0,i.kt)("p",null,"Param\xe8tres de la cible pour cr\xe9\xe9r un ",(0,i.kt)("inlineCode",{parentName:"p"},"MethodTransformer")," :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Nom"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Exemple"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"type"),(0,i.kt)("td",{parentName:"tr",align:null},"Le transformer transformera une m\xe9thode"),(0,i.kt)("td",{parentName:"tr",align:null},"METHOD")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"class"),(0,i.kt)("td",{parentName:"tr",align:null},"Le nom de la classe qui poss\xe8de la m\xe9thode"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"net/minecraft/client/Minecraft"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"methodName"),(0,i.kt)("td",{parentName:"tr",align:null},"La nom de la m\xe9thode \xe0 transformer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"reloadResourcePacks"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"methodDesc"),(0,i.kt)("td",{parentName:"tr",align:null},"La description de la m\xe9thode \xe0 transformer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"(Z)Ljava/util/concurrent/CompletableFuture;"))))),(0,i.kt)("p",null,"La fonction de transformation prend un objet ",(0,i.kt)("inlineCode",{parentName:"p"},"MethodNode")," en param\xe8tre et le retourne \xe0 la fin apr\xe8s avoir effectu\xe9 les modifications."),(0,i.kt)("p",null,"R\xe9sultat en ",(0,i.kt)("strong",{parentName:"p"},"JavaScript")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': 'reloadResourcePacks',\n                'methodDesc': '(Z)Ljava/util/concurrent/CompletableFuture;'\n            },\n            'transformer': function(methodNode) {\n                // modifications\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("h3",{id:"fieldtransformer"},"FieldTransformer"),(0,i.kt)("p",null,"Param\xe8tres de la cible pour cr\xe9\xe9r un ",(0,i.kt)("inlineCode",{parentName:"p"},"FieldTransformer")," :"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Nom"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:null},"Exemple"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"type"),(0,i.kt)("td",{parentName:"tr",align:null},"Le transformer transformera un champ"),(0,i.kt)("td",{parentName:"tr",align:null},"FIELD")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"class"),(0,i.kt)("td",{parentName:"tr",align:null},"Le nom de la classe qui poss\xe8de le champ"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"net/minecraft/client/Minecraft"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"fieldName"),(0,i.kt)("td",{parentName:"tr",align:null},"La nom du champ \xe0 transformer"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"pendingReload"))))),(0,i.kt)("p",null,"La fonction de transformation prend un objet ",(0,i.kt)("inlineCode",{parentName:"p"},"FieldNode")," en param\xe8tre et le retourne \xe0 la fin apr\xe8s avoir effectu\xe9 les modifications."),(0,i.kt)("p",null,"R\xe9sultat en ",(0,i.kt)("strong",{parentName:"p"},"JavaScript")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'FIELD',\n                'class': 'net/minecraft/client/Minecraft',\n                'fieldName': 'pendingReload'\n            },\n            'transformer': function(fieldNode) {\n                // modifications\n                return fieldNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"On peut tr\xe8s bien ajouter \xe0 la suite des transformers dans le m\xeame coremod comme ceci :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'CLASS',\n                'name': 'net/minecraft/client/Minecraft'\n            },\n            'transformer': function(classNode) {\n                // modifications\n                return classNode;\n            }\n        },\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': 'reloadResourcePacks',\n                'methodDesc': '(Z)Ljava/util/concurrent/CompletableFuture;'\n            },\n            'transformer': function(methodNode) {\n                // modifications\n                return methodNode;\n            }\n        },\n        'MonTransformer': {\n            'target': {\n                'type': 'FIELD',\n                'class': 'net/minecraft/client/Minecraft',\n                'fieldName': 'pendingReload'\n            },\n            'transformer': function(fieldNode) {\n                // modifications\n                return fieldNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("h2",{id:"exemples-dutilisation"},"Exemples d'utilisation"),(0,i.kt)("p",null,"Voici trois exemples d'application d'un coremod."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#modification-dune-instruction"},"Modification d'une instruction")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#affichage-dans-la-console-lors-de-linitialisation-du-jeu"},"Affichage dans la console lors de l'initialisation du jeu")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#supprimer-des-instructions"},"Supprimer des instructions"))),(0,i.kt)("h3",{id:"modification-dune-instruction"},"Modification d'une instruction"),(0,i.kt)("p",null,"M\xeame si on est en JavaScript, on a acc\xe8s aux m\xe9thodes et aux champs des classes Java. C'est ainsi que l'on peut modifier le code du jeu.\nPrenons un exemple, certes inutile, mais un exemple quand m\xeame : on souhaite modifier le nom du thread de rendu de Minecraft."),(0,i.kt)("p",null,"Trois \xe9tapes :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%C3%A9tape-1"},"Chercher o\xf9 le nom du thread de rendu est g\xe9r\xe9")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%C3%A9tape-2"},"Imaginer un moyen de changer le nom du thread de rendu")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%C3%A9tape-3"},"Le coder dans le transformer"))),(0,i.kt)("h4",{id:"\xe9tape-1"},"\xc9tape 1"),(0,i.kt)("p",null,"On sait que le thread est cr\xe9\xe9 au lancement de Minecraft. On cherche d'abord dans la classe principale : ",(0,i.kt)("inlineCode",{parentName:"p"},"net.minecraft.client.main.Main"),".\nBingo, dans la m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", on trouve la ligne ",(0,i.kt)("inlineCode",{parentName:"p"},'Thread.currentThread().setName("Render thread");'),"."),(0,i.kt)("p",null,"En utilisant un outil comme ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Col-E/Recaf"},(0,i.kt)("strong",{parentName:"a"},"Recaf")),", dans l'onglet ",(0,i.kt)("inlineCode",{parentName:"p"},"Search -> Strings")," en cherchant ",(0,i.kt)("inlineCode",{parentName:"p"},"Render thread")," on aurait trouv\xe9 toutes les occurrences o\xf9 ce nom est utilis\xe9."),(0,i.kt)("h4",{id:"\xe9tape-2"},"\xc9tape 2"),(0,i.kt)("p",null,"Si on est encore d\xe9butant avec le bytecode, il peut \xeatre difficile d'imaginer imm\xe9diatement une solution \xe0 la probl\xe9matique. Pour faciliter les choses, il peut, encore une fois, \xeatre int\xe9ressant d'utiliser ",(0,i.kt)("strong",{parentName:"p"},"Recaf"),". On charge le jar de minecraft en environnement de d\xe9veloppement (pour ne pas avoir le jeu obfusqu\xe9). Puis, on ouvre la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"net/minecraft/client/main/Main"),". En faisant ",(0,i.kt)("inlineCode",{parentName:"p"},"Clic droit -> Edit with assembler")," sur le nom de la m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", on peut ainsi lire (et modifier) les instructions en bytecode de la m\xe9thode. En parcourant les instructions, on remarque que tous les strings de la m\xe9thode sont utilis\xe9es via une instruction nomm\xe9e ",(0,i.kt)("strong",{parentName:"p"},"LDC"),". En effet, cette instruction permet d'apporter sur la pile (la stack) une constante, ici de type ",(0,i.kt)("inlineCode",{parentName:"p"},"String"),"."),(0,i.kt)("p",null,"En poursuivant les recherches, on trouve les trois lignes suivantes :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'INVOKESTATIC java/lang/Thread.currentThread()Ljava/lang/Thread;\nLDC "Render thread"\nINVOKEVIRTUAL java/lang/Thread.setName(Ljava/lang/String;)V\n')),(0,i.kt)("p",null,"La premi\xe8re instruction (",(0,i.kt)("inlineCode",{parentName:"p"},"INVOKESTATIC"),") sert \xe0 appeler une m\xe9thode statique, ici contenue dans la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"Thread")," et de nom ",(0,i.kt)("inlineCode",{parentName:"p"},"currentThread")," et de signature ",(0,i.kt)("inlineCode",{parentName:"p"},"()Ljava/lang/Thread;"),". Pour rappel, la signature d'une m\xe9thode permet de d\xe9terminer le type des param\xe8tres et son type retourn\xe9. Avec ",(0,i.kt)("strong",{parentName:"p"},"Recaf"),", on peut trouver la signature d'une m\xe9thode en faisant ",(0,i.kt)("inlineCode",{parentName:"p"},"Clic droit -> Edit with assembler")," sur le nom de la m\xe9thode, on peut obtenir sur la premi\xe8re ligne la description de la m\xe9thode."),(0,i.kt)("p",null,"La seconde instruction (",(0,i.kt)("inlineCode",{parentName:"p"},"LDC"),') apporte sur la pile la constante "Render thread".'),(0,i.kt)("p",null,"La troisi\xe8me (",(0,i.kt)("inlineCode",{parentName:"p"},"INVOKEVIRTUAL"),") sert \xe0 appeler une m\xe9thode non-statique sur une instance d'une classe donn\xe9e, ici sur une instance de la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"Thread"),", r\xe9cup\xe9r\xe9e via la premi\xe8re instruction."),(0,i.kt)("p",null,"La modification \xe0 effectuer est donc tr\xe8s simple, il suffit donc de changer la valeur constante (la seconde instruction) par ce que l'on souhaite."),(0,i.kt)("h4",{id:"\xe9tape-3"},"\xc9tape 3"),(0,i.kt)("p",null,"On consid\xe8re qu'on utilise un coremod avec un transformer qui transformera la m\xe9thode ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," de la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"net/minecraft/client/main/Main")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/main/Main',\n                'methodName': 'main',\n                'methodDesc': '([Ljava/lang/String;)V'\n            },\n            'transformer': function(methodNode) {\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"On parcourt toutes les instructions de la m\xe9thode :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/main/Main',\n                'methodName': 'main',\n                'methodDesc': '([Ljava/lang/String;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"On v\xe9rifie si l'instruction est bien une instruction LDC et on v\xe9rifie si la constante de l'instruction est bien \xe9gale \xe0 \"Render thread\"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/main/Main',\n                'methodName': 'main',\n                'methodDesc': '([Ljava/lang/String;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.LDC && instructions[i].cst == \"Render thread\") {\n\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,'On remplace la constante par "Thread vraiment lent". On peut ensuite casser la boucle avec le mot-cl\xe9 ',(0,i.kt)("inlineCode",{parentName:"p"},"break")," pour \xe9viter de perdre du temps lors de la transformation de la m\xe9thode."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/main/Main',\n                'methodName': 'main',\n                'methodDesc': '([Ljava/lang/String;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.LDC && instructions[i].cst == \"Render thread\") {\n                        instructions[i].cst = \"Thread vraiment lent\";\n                        break;\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"Et voil\xe0, on peut d\xe9sormais lancer le jeu et consulter notre nouveau et super nom du thread de rendu de Minecraft ! On peut aussi noter la pr\xe9sence de cette ligne ",(0,i.kt)("inlineCode",{parentName:"p"},"Transforming main with desc ([Ljava/lang/String;)V")," qui indique que la m\xe9thode a bien \xe9t\xe9 transform\xe9e, utile pour savoir si notre modification s'est appliqu\xe9e ou non !"),(0,i.kt)("h3",{id:"affichage-dans-la-console-lors-de-linitialisation-du-jeu"},"Affichage dans la console lors de l'initialisation du jeu"),(0,i.kt)("p",null,"Il s'agit d'un second exemple d'application des coremods. Ici, il s'agira d'ajouter \xe0 la fin du constructeur un simple ",(0,i.kt)("inlineCode",{parentName:"p"},'System.out.println("Initialisation du jeu");')),(0,i.kt)("p",null,"Ici, la p\xe9riode de recherche est assez facile : on sait quelle m\xe9thode modifier dans quelle classe et o\xf9 ajouter la ligne de code.\nOn a donc un d\xe9but de coremod ainsi :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"function initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': '<init>',\n                'methodDesc': '(Lnet/minecraft/client/main/GameConfig;)V'\n            },\n            'transformer': function(methodNode) {\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"De la m\xeame mani\xe8re, on parcourt les instructions de la m\xe9thode jusqu'\xe0 arriver \xe0 la derni\xe8re, l'instruction ",(0,i.kt)("inlineCode",{parentName:"p"},"RETURN")," (par chance, il n'y en a qu'une seule) :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': '<init>',\n                'methodDesc': '(Lnet/minecraft/client/main/GameConfig;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.RETURN) {\n                        break;\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"D\xe9sormais, il faut ajouter la ligne de code juste avant l'instruction ",(0,i.kt)("inlineCode",{parentName:"p"},"RETURN"),". La ligne de code est constitu\xe9e de plusieurs instructions :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'GETSTATIC java/lang/System.out Ljava/io/PrintStream;\nLDC "Initialisation du jeu"\nINVOKEVIRTUAL java/io/PrintStream.println(Ljava/lang/String;)V\n')),(0,i.kt)("p",null,"On cr\xe9e donc une liste d'instructions (",(0,i.kt)("inlineCode",{parentName:"p"},"InsnList"),") :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'var insnList = new InsnList();\ninsnList.add(new FieldInsnNode(Opcodes.GETSTATIC, "java/lang/System", "out", "Ljava/io/PrintStream;"));\ninsnList.add(new LdcInsnNode("Initialisation du jeu"));\ninsnList.add(new MethodInsnNode(Opcodes.INVOKEVIRTUAL, "java/io/PrintStream", "println", "(Ljava/lang/String;)V"));\n')),(0,i.kt)("p",null,"On ajoute instruction par instruction \xe0 la liste d'instructions. Je conseille de consulter la documentation des constructeurs de ces classes pour savoir quel param\xe8tre correspond \xe0 quoi. Il ne faut pas non plus oublier d'importer les quatres classes (",(0,i.kt)("inlineCode",{parentName:"p"},"InsnList"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"FieldInsnNode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"LdcInsnNode"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"MethodInsnNode"),") qui sont utilis\xe9es dans cette liste d'instructions."),(0,i.kt)("p",null,"On finit par ajouter la liste d'instructions juste avant l'instruction ",(0,i.kt)("inlineCode",{parentName:"p"},"RETURN")," :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"methodNode.instructions.insertBefore(instructions[i], insnList);\n")),(0,i.kt)("p",null,"On obtient le r\xe9sultat final :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var FieldInsnNode = Java.type('org.objectweb.asm.tree.FieldInsnNode');\nvar InsnList = Java.type('org.objectweb.asm.tree.InsnList');\nvar LdcInsnNode = Java.type('org.objectweb.asm.tree.LdcInsnNode');\nvar MethodInsnNode = Java.type('org.objectweb.asm.tree.MethodInsnNode');\nvar Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': '<init>',\n                'methodDesc': '(Lnet/minecraft/client/main/GameConfig;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.RETURN) {\n                        var insnList = new InsnList();\n                        insnList.add(new FieldInsnNode(Opcodes.GETSTATIC, \"java/lang/System\", \"out\", \"Ljava/io/PrintStream;\"));\n                        insnList.add(new LdcInsnNode(\"Initialisation du jeu\"));\n                        insnList.add(new MethodInsnNode(Opcodes.INVOKEVIRTUAL, \"java/io/PrintStream\", \"println\", \"(Ljava/lang/String;)V\"));\n                        methodNode.instructions.insertBefore(instructions[i], insnList);\n                        break;\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"D\xe9sormais, un joli message s'affiche au d\xe9but du chargement du jeu !\nCet exemple est certes un peu bateau, mais il permet de ma\xeetriser les fondamentaux."),(0,i.kt)("h3",{id:"supprimer-des-instructions"},"Supprimer des instructions"),(0,i.kt)("p",null,"Cette fois-ci, on souhaite retirer, pour une quelconque raison, un message de la console qui indique le pseudo du joueur au d\xe9marrage du jeu, le fameux ",(0,i.kt)("inlineCode",{parentName:"p"},'"Setting user: Pseudo"'),"."),(0,i.kt)("p",null,"Le fonctionnement est, encore une fois, similaire. Sauf que nous n'allons ni modifier, ni ajouter d'instructions, mais en retirer.\nJe passe l'\xe9tape de recherche qui nous permet de savoir o\xf9 est la ligne de code \xe0 supprimer :\nIl s'agit, encore une fois, dans la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"net/minecraft/client/Minecraft")," du constructeur : ",(0,i.kt)("inlineCode",{parentName:"p"},"<init>(Lnet/minecraft/client/main/GameConfig;)V"),".\nLes instructions concern\xe9es sont :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'GETSTATIC net/minecraft/client/Minecraft.LOGGER Lorg/slf4j/Logger;\nLDC "Setting user: {}"\nALOAD this\nGETFIELD net/minecraft/client/Minecraft.user Lnet/minecraft/client/User;\nINVOKEVIRTUAL net/minecraft/client/User.getName()Ljava/lang/String;\nINVOKEINTERFACE org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;)V\n')),(0,i.kt)("p",null,"On d\xe9finit une instruction rep\xe8re, qui permettra de nous situer dans la liste d'instructions. Ici, l'instruction LDc \"Setting user: {}\" est la plus pertinente, nous savons qu'il n'y a aucune instruction similaire utilis\xe9e dans la m\xe9thode. On peut donc imaginer un d\xe9but de coremod :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': '<init>',\n                'methodDesc': '(Lnet/minecraft/client/main/GameConfig;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.LDC && instructions[i].cst == \"Setting user: {}\") {\n                        break;\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"Il faut donc ensuite retirer une a une l'instruction pr\xe9c\xe9dente, les quatre suivantes et cette instruction de la liste des instructions de la m\xe9thode. Pour cela, il existe une m\xe9thode dans la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"InsnList")," qui permet de supprimer une instruction. Son nom est explicite : ",(0,i.kt)("inlineCode",{parentName:"p"},"remove"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var Opcodes = Java.type('org.objectweb.asm.Opcodes');\n\nfunction initializeCoreMod() {\n    return {\n        'MonTransformer': {\n            'target': {\n                'type': 'METHOD',\n                'class': 'net/minecraft/client/Minecraft',\n                'methodName': '<init>',\n                'methodDesc': '(Lnet/minecraft/client/main/GameConfig;)V'\n            },\n            'transformer': function(methodNode) {\n                var instructions = methodNode.instructions.toArray();\n                for(var i = 0; i < instructions.length; i++) {\n                    if(instructions[i].getOpcode() == Opcodes.LDC && instructions[i].cst == \"Setting user: {}\") {\n                        methodNode.instructions.remove(instructions[i - 1]);\n                        methodNode.instructions.remove(instructions[i]);\n                        methodNode.instructions.remove(instructions[i + 1]);\n                        methodNode.instructions.remove(instructions[i + 2]);\n                        methodNode.instructions.remove(instructions[i + 3]);\n                        methodNode.instructions.remove(instructions[i + 4]);\n                        break;\n                    }\n                }\n                return methodNode;\n            }\n        }\n    }\n}\n")),(0,i.kt)("p",null,"D\xe9sormais, le message dans la console affichant votre pseudo n'appara\xeet plus. J'en conviens, ce n'est pas tr\xe8s utile."),(0,i.kt)("h2",{id:"transformation-et-mappings-lancement-en-production"},"Transformation et mappings (lancement en production)"),(0,i.kt)("p",null,"Vous avez peut-\xeatre cod\xe9 plusieurs coremods (gr\xe2ce \xe0 cette page \ud83d\ude04), tout fonctionne en environnement de d\xe9veloppement, mais quand vous exportez votre mod et que vous l'essayer sur le launcher officiel, patatra, rien ne marche !"),(0,i.kt)("p",null,"Il est bien possible qu'il y ait un probl\xe8me de mappings, c'est-\xe0-dire que les noms des champs et des m\xe9thodes soit diff\xe9rents entre l'environnement de d\xe9veloppement (lisibles) et la production (illisibles). Il faut donc rendre compatible le coremod dans les deux environnements."),(0,i.kt)("p",null,"Il y a donc trois endroits possibles qui peuvent causer ces probl\xe8mes dans les coremods :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#cible-du-transformer"},"La cible du transformer concerne une m\xe9thode ou un champ d'une classe de Minecraft")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#champ-appel%C3%A9"},"Un champ d'une classe de Minecraft est modifi\xe9/appel\xe9 lors de la transformation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#m%C3%A9thode-appel%C3%A9e"},"Une m\xe9thode d'une classe de Minecraft est appel\xe9e lors de la transformation"))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Les m\xe9thodes ",(0,i.kt)("inlineCode",{parentName:"p"},"main"),", les constructeurs ",(0,i.kt)("inlineCode",{parentName:"p"},"<init>")," et les static-initializers ",(0,i.kt)("inlineCode",{parentName:"p"},"<clinit>")," ne sont pas concern\xe9s par les mappings.")),(0,i.kt)("h3",{id:"cible-du-transformer"},"Cible du transformer"),(0,i.kt)("p",null,"On consid\xe8re que le transformer est de type ",(0,i.kt)("inlineCode",{parentName:"p"},"METHOD")," ou ",(0,i.kt)("inlineCode",{parentName:"p"},"FIELD"),"."),(0,i.kt)("p",null,"Situation de d\xe9part dans le cas de la transformation d'une m\xe9thode (valable pour un champ) :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"'target': {\n    'type': 'METHOD',\n    'class': 'net/minecraft/BlockUtil',\n    'methodName': 'getTopConnextedBlock',\n    'methodDesc': '(Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional;'\n}\n")),(0,i.kt)("p",null,"Ici, le probl\xe8me va concerner le nom de la m\xe9thode. En effet, ",(0,i.kt)("inlineCode",{parentName:"p"},"getTopConnextedBlock")," n'existe qu'en environnement de d\xe9veloppement. Pour trouver le nom adapt\xe9 \xe0 la production, il y a quatre m\xe9thodes :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Avoir le plugin ",(0,i.kt)("a",{parentName:"li",href:"https://plugins.jetbrains.com/plugin/8327-minecraft-development"},"Minecraft Development")," sur IntelliJ IDEA, faire clique droit sur la m\xe9thode concern\xe9e et cliquer sur ",(0,i.kt)("inlineCode",{parentName:"li"},"Get SRG name")),(0,i.kt)("li",{parentName:"ul"},"Charger dans ",(0,i.kt)("strong",{parentName:"li"},"Recaf")," le fichier jar de Minecraft (par exemple ",(0,i.kt)("inlineCode",{parentName:"li"},".minecraft/libraries/net/minecraft/client/1.18.2-20220404.173914/client-1.18.2-20220404.173914-srg.jar")," et d\xe9duire la m\xe9thode concern\xe9e par les actions effectu\xe9es)"),(0,i.kt)("li",{parentName:"ul"},"Chercher dans un des fichiers des mappings consacr\xe9 aux m\xe9thodes le nom ",(0,i.kt)("inlineCode",{parentName:"li"},"getTopConnextedBlock")," et regarder sa correspondance."),(0,i.kt)("li",{parentName:"ul"},"Interroger sur Discord le bot forge ",(0,i.kt)("inlineCode",{parentName:"li"},"forge-bot#9014")," avec la commande !moj ",(0,i.kt)("inlineCode",{parentName:"li"},"getTopConnextedBlock")," et regarder la r\xe9ponse.")),(0,i.kt)("p",null,"Toutes ces m\xe9thodes pointent vers le m\xeame r\xe9sultat : le nom obfusqu\xe9 de cette m\xe9thode est ",(0,i.kt)("inlineCode",{parentName:"p"},"m_177845_"),". Il faut donc remplacer dans la cible du transformer ",(0,i.kt)("inlineCode",{parentName:"p"},"getTopConnextedBlock")," par ",(0,i.kt)("inlineCode",{parentName:"p"},"m_177845_"),"."),(0,i.kt)("h3",{id:"champ-appel\xe9"},"Champ appel\xe9"),(0,i.kt)("p",null,"De la m\xeame mani\xe8re, il faut trouver le nom du champ concern\xe9 et remplacer le nom actuel par ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI.mapField('nom_obfusqu\xe9')"),". Par exemple, pour le champ ",(0,i.kt)("inlineCode",{parentName:"p"},"pendingReload")," dans la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"Minecraft"),", cela donnera ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI.mapField('f_91024_')"),"."),(0,i.kt)("h3",{id:"m\xe9thode-appel\xe9e"},"M\xe9thode appel\xe9e"),(0,i.kt)("p",null,"De la m\xeame mani\xe8re, il faut trouver le nom du champ concern\xe9 et remplacer le nom actuel par ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI.mapMethod('nom_obfusqu\xe9')"),". Par exemple, pour le champ ",(0,i.kt)("inlineCode",{parentName:"p"},"reloadResourcePacks")," (avec un bool\xe9an en param\xe8tre) dans la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"Minecraft"),", cela donnera ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI.mapMethod('m_168019_')"),"."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"Bien penser \xe0 importer la classe ",(0,i.kt)("inlineCode",{parentName:"p"},"ASMAPI")," quand vous utilisez les m\xe9thodes de cette classe !")),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"Si vous avez lu jusqu'ici et pratiqu\xe9 un minimum, vous \xeates d\xe9sormais initi\xe9 aux coremods et pr\xeat \xe0 aller plus loin ! Je ne vais pas spoiler la suite, cherchez par vous-m\xeame et vous trouverez, ce n'est pas si compliqu\xe9 que \xe7a !"))}c.isMDXComponent=!0}}]);