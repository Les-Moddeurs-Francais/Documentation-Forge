"use strict";(self.webpackChunkdoc_forge=self.webpackChunkdoc_forge||[]).push([[2266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),o=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=o(n),c=a,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||i;return n?r.createElement(f,l(l({ref:t},d),{},{components:n})):r.createElement(f,l({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2,title:"Perspectives s\xe9par\xe9es",description:"Comment utiliser les perspectives s\xe9par\xe9es des mod\xe8les pour les items ?",tags:["items","mod\xe8les"]},l=void 0,s={unversionedId:"models/items/perspective",id:"models/items/perspective",title:"Perspectives s\xe9par\xe9es",description:"Comment utiliser les perspectives s\xe9par\xe9es des mod\xe8les pour les items ?",source:"@site/docs/models/items/perspective.mdx",sourceDirName:"models/items",slug:"/models/items/perspective",permalink:"/models/items/perspective",draft:!1,editUrl:"https://github.com/Les-Moddeurs-Francais/Documentation-Forge/edit/master/docs/models/items/perspective.mdx",tags:[{label:"items",permalink:"/tags/items"},{label:"mod\xe8les",permalink:"/tags/modeles"}],version:"current",lastUpdatedBy:"Mysterious_Dev",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Perspectives s\xe9par\xe9es",description:"Comment utiliser les perspectives s\xe9par\xe9es des mod\xe8les pour les items ?",tags:["items","mod\xe8les"]},sidebar:"documentationSidebar",previous:{title:"Propri\xe9t\xe9s de mod\xe8le",permalink:"/models/items/property"},next:{title:"Data Generators",permalink:"/category/data-generators"}},p={},o=[{value:"Base",id:"base",level:2},{value:"Perspectives",id:"perspectives",level:2},{value:"Exemple",id:"exemple",level:2}],d={toc:o};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Les perspectives s\xe9par\xe9es permettent d'afficher un mod\xe8le diff\xe9rent pour un item selon la perspective dans laquelle celui-ci est rendu. Cela nous permet donc d'attribuer un mod\xe8le \xe0 un item quand il est dans notre main et un autre mod\xe8le pour quand il est affich\xe9 dans une interface."),(0,a.kt)("h2",{id:"base"},"Base"),(0,a.kt)("p",null,"La structure du fichier du mod\xe8le sera celle-ci :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "parent": "forge:item/default",\n  "loader": "forge:separate_transforms",\n  "base": {\n    //Mod\xe8le de base\n  },\n  "perspectives": {\n    //Mod\xe8les selon les diff\xe9rentes perspectives\n  }\n}\n')),(0,a.kt)("p",null,"Le mod\xe8le de base est celui qui est affich\xe9 quand le cas d'une perspective n'est pas prise en charge dans le champ ",(0,a.kt)("inlineCode",{parentName:"p"},"perspectives"),". Pour faire r\xe9f\xe9rence \xe0 notre item, il nous faudra utiliser la cl\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"parent")," avec une valeur qui sera le chemin vers votre item (un peu comme pour un mod\xe8le basique) :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"parent": "modid:item/example_item"\n')),(0,a.kt)("h2",{id:"perspectives"},"Perspectives"),(0,a.kt)("p",null,"Pour ce qui est des perspectives, il nous faudra ajouter une cl\xe9 objet pour chaque perspective o\xf9 l'on veut modifier le mod\xe8le de l'item, avec \xe0 l'int\xe9rieur une cl\xe9 ",(0,a.kt)("inlineCode",{parentName:"p"},"parent")," pour sp\xe9cifier le mod\xe8le. Cela nous donne une chose du style :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"nom_de_la_perspective": {\n  "parent": "modid:item/example_item"\n}\n')),(0,a.kt)("p",null,"Pour connaitre les diff\xe9rentes perspectives, vous pouvez vous r\xe9f\xe9rer au tableau ci-dessous."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Nom"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"thirdperson_righthand")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans la main droite \xe0 la 3\xe8me personne")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"thirdperson_lefthand")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans la main gauche \xe0 la 3\xe8me personne")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"firstperson_righthand")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans la main droite \xe0 la 1ere personne")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"firstperson_lefthand")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans la main gauche \xe0 la 1ere personne")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"head")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item sur la t\xeate du joueur (",(0,a.kt)("em",{parentName:"td"},"en 3\xe8me personne"),")")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"gui")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans une interface")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"ground")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item sur le sol")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"fixed")),(0,a.kt)("td",{parentName:"tr",align:null},"Perspective de l'item dans un cadre")))),(0,a.kt)("h2",{id:"exemple"},"Exemple"),(0,a.kt)("p",null,"En combinant tout cela, nous arrivons donc \xe0 un fichier mod\xe8le du type :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "parent": "forge:item/default",\n  "loader": "forge:separate_transforms",\n  "base": {\n    "parent": "modid:item/example_item"\n  },\n  "perspectives": {\n    "firstperson_lefthand": {\n      "parent": "modid:item/example_item_fp_hand"\n    },\n    "gui": {\n      "parent": "modid:item/example_item_gui"\n    }\n  }\n}\n')))}m.isMDXComponent=!0}}]);